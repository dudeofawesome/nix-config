{
  pkgs,
  lib,
  config,
  ...
}:

let
  inherit (lib) mkOption types;

  cfg = config.programs.vscode;
in
{
  options = {
    programs.vscode = {
      mutableUserSettings = mkOption {
        type = with types; nullOr path;
        default = null;
      };
    };
  };

  config =
    let
      userDir =
        if pkgs.stdenv.targetPlatform.isDarwin then
          "$HOME/Library/Application Support/Code/User"
        else if pkgs.stdenv.targetPlatform.isLinux then
          "$HOME/.config/Code/User"
        else
          abort;
      vscodeConfigFilePath = "${userDir}/settings.json";
    in

    lib.mkIf cfg.enable {
      home.activation.createMutableVSCodeSettings = lib.mkIf (cfg.mutableUserSettings != null) (
        lib.hm.dag.entryAfter [ "writeBoundary" ] ''
          $DRY_RUN_CMD mkdir -p "$(dirname ~/"${vscodeConfigFilePath}")"

          # Detect OS theme setting
          os_theme="$(/usr/bin/defaults read -g AppleInterfaceStyle 2> /dev/null || echo "Light")"
          # Read preferred color theme
          theme="$(grep -Po '(?<="workbench.preferred'"$os_theme"'ColorTheme": ").+(?=")' "${cfg.mutableUserSettings}")"
          # Find Prettier
          prettier_path="$(
            echo "${pkgs.nodePackages.prettier}/lib/node_modules/prettier/" \
            `# Escape slashes for later use in sed` \
            | sed -Ee 's/\//\\\//gi'
          )"

          $DRY_RUN_CMD cat "${cfg.mutableUserSettings}" \
            `# Add header about nix` \
            | sed -e '1i \/\/ Generated by Home Manager' \
            `# Modify the selected theme to prevent jerk` \
            | sed -Ee 's/("workbench.colorTheme"): "(.+)"/\1: "'"$theme"'"/i' \
            `# Point Prettier to nix version` \
            | sed -Ee 's/("prettier.prettierPath"): "(.+)"/\1: "'"$prettier_path"'"/i' \
            `# Overwrite VS Code settings` \
            | $DRY_RUN_CMD tee "${vscodeConfigFilePath}" > /dev/null
        ''
      );
    };
}
