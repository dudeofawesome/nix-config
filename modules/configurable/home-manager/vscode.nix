{
  pkgs,
  pkgs-stable,
  lib,
  config,
  ...
}:

let
  inherit (lib) mkOption types;

  cfg = config.programs.vscode;
in
{
  options = {
    programs.vscode = {
      mutableUserSettings = mkOption {
        type = with types; nullOr path;
        default = null;
      };
    };
  };

  config =
    let
      user_dir =
        if pkgs.stdenv.targetPlatform.isDarwin then
          "$HOME/Library/Application Support/Code/User"
        else if pkgs.stdenv.targetPlatform.isLinux then
          "$HOME/.config/Code/User"
        else
          abort;
      config_file_path = "${user_dir}/settings.json";
      global_settings_db_path = "${user_dir}/globalStorage/state.vscdb";
    in

    lib.mkIf cfg.enable {
      home.activation = {
        createVSCodeMutableUserSettings = lib.mkIf (cfg.mutableUserSettings != null) (
          lib.hm.dag.entryAfter [ "writeBoundary" ] ''
            $DRY_RUN_CMD mkdir -p "$(dirname ~/"${config_file_path}")"

            # Detect OS theme setting
            os_theme="$(/usr/bin/defaults read -g AppleInterfaceStyle 2> /dev/null || echo "Light")"
            # Read preferred color theme
            theme="$(grep -Po '(?<="workbench.preferred'"$os_theme"'ColorTheme": ").+(?=")' "${cfg.mutableUserSettings}")"

            # Find Prettier
            prettier_path="$(
              echo "${pkgs.nodePackages.prettier}/lib/node_modules/prettier/" \
              `# Escape slashes for later use in sed` \
              | sed -Ee 's/\//\\\//gi'
            )"

            # Find kubectl
            kubectl_path="$(
              echo "${lib.getExe pkgs-stable.kubectl}" \
              `# Escape slashes for later use in sed` \
              | sed -Ee 's/\//\\\//gi'
            )"

            # Find Helm
            helm_path="$(
              echo "${lib.getExe pkgs-stable.kubernetes-helm}" \
              `# Escape slashes for later use in sed` \
              | sed -Ee 's/\//\\\//gi'
            )"

            $DRY_RUN_CMD cat "${cfg.mutableUserSettings}" \
              `# Add header about nix` \
              | sed -e '1i \/\/ Generated by Home Manager' \
              \
              `# Modify the selected theme to prevent jerk` \
              | sed -Ee 's/("workbench.colorTheme"): "(.+)"/\1: "'"$theme"'"/i' \
              \
              `# Point to nix's Prettier` \
              | sed -Ee 's/("prettier.prettierPath"): "(.+)"/\1: "'"$prettier_path"'"/i' \
              `# Point to nix's kubectl` \
              | sed -Ee 's/("vscode-kubernetes.kubectl-path"): "(.+)"/\1: "'"$kubectl_path"'"/i' \
              | sed -Ee 's/("vs-kubernetes.kubectl-path"): "(.+)"/\1: "'"$kubectl_path"'"/i' \
              `# Point to nix's helm` \
              | sed -Ee 's/("vscode-kubernetes.helm-path"): "(.+)"/\1: "'"$helm_path"'"/i' \
              | sed -Ee 's/("vs-kubernetes.helm-path"): "(.+)"/\1: "'"$helm_path"'"/i' \
              \
              `# Overwrite VS Code settings` \
              | $DRY_RUN_CMD tee "${config_file_path}" > /dev/null
          ''
        );
      };
    };
}
